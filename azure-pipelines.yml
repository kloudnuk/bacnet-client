# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

pool: Default

steps:
- task: CmdLine@2
  inputs:
    script: |
      #!/bin/bash
      
      function unlock_keyring() {
          export "$(echo -n "$(eon17_pass)" | gnome-keyring-daemon --replace --unlock)"
          unset "$(eon17_pass)"
      }
      
      # apt update | apt upgrade -y
      
      if apt list --installed | grep -q software-properties-common; then
          echo '...software-properties-common found'
      else
          apt install software-properties-common -y
      fi
      
      if apt list --installed | grep -q pipx; then
          echo '...pipx found'
      else
          apt install pipx -y
      fi
      
      if apt list --installed | grep -q python3.10; then
          echo '...python3.10 found'
      else
          apt install python3.10 -y
      fi
      
      if pipx list | grep -q poetry; then
          echo '...poetry found'
      else
          pipx install poetry==1.4.2
      fi
      
      poetry shell
      unlock_keyring
      rm -r dist/*
      poetry install --sync
      poetry build -f wheel

      [[ dist/res ]] && rm -r dist/res/
      cp -r src/res/ dist/
      
      echo "$(ado_ bacnetclient_pat)" | az devops login --organization https://dev.azure.com/vtsmolinski/
      
      az artifacts universal publish \
          --organization https://dev.azure.com/vtsmolinski/ \
          --project="kloudnuk" \
          --scope project \
          --feed kloudnuk \
          --name bacnet-client \
          --version 0.0.1 \
          --description "a bacnet-ip client to discover devices, and create real-time bi-directional pipelines." \
          --path dist
      
      az devops logout --organization https://dev.azure.com/vtsmolinski/
      
      # TODO - Sign artifacts with a code signing certificate.
      # TODO - Add code to the downstream to cut a account-specific mongodb mTLS certificate an add it to the res folder.  inputs:
    arguments: '$(ADO__BACNETCLIENT_PAT) $(EON17_PASS)'
  displayName: 'build_exec'
